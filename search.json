[
  {
    "objectID": "projects/resume.html",
    "href": "projects/resume.html",
    "title": "Resume",
    "section": "",
    "text": "🎓 Bachelor of Science in Computer Science\nSpringfield University | 2020–2024\n\n\n\n\n\nProgramming: Python, JavaScript, SQL\nData Analysis: Pandas, NumPy, Plotly\nWeb Development: HTML5, CSS3, Quarto\nTools: Git, GitHub, Jupyter Notebook, VS Code\n\n\n\n\n\nData Science Intern\nApex Analytics | Summer 2023\n\nBuilt machine learning models to forecast sales.\nAutomated data collection pipelines using Python.\n\n\n\n\n\n\nCreated an interactive portfolio website with Quarto.\nAnalyzed environmental data to identify pollution trends.\n\n\n\n\n\nPython for Data Science — Coursera\nIntroduction to SQL — Udemy\n\n\n\n\n\n📧 Email: example.email@domain.com\n🔗 GitHub: random-user\n🌐 Website: random-user.github.io"
  },
  {
    "objectID": "projects/resume.html#education",
    "href": "projects/resume.html#education",
    "title": "Resume",
    "section": "",
    "text": "🎓 Bachelor of Science in Computer Science\nSpringfield University | 2020–2024"
  },
  {
    "objectID": "projects/resume.html#skills",
    "href": "projects/resume.html#skills",
    "title": "Resume",
    "section": "",
    "text": "Programming: Python, JavaScript, SQL\nData Analysis: Pandas, NumPy, Plotly\nWeb Development: HTML5, CSS3, Quarto\nTools: Git, GitHub, Jupyter Notebook, VS Code"
  },
  {
    "objectID": "projects/resume.html#experience",
    "href": "projects/resume.html#experience",
    "title": "Resume",
    "section": "",
    "text": "Data Science Intern\nApex Analytics | Summer 2023\n\nBuilt machine learning models to forecast sales.\nAutomated data collection pipelines using Python."
  },
  {
    "objectID": "projects/resume.html#personal-projects",
    "href": "projects/resume.html#personal-projects",
    "title": "Resume",
    "section": "",
    "text": "Created an interactive portfolio website with Quarto.\nAnalyzed environmental data to identify pollution trends."
  },
  {
    "objectID": "projects/resume.html#certifications",
    "href": "projects/resume.html#certifications",
    "title": "Resume",
    "section": "",
    "text": "Python for Data Science — Coursera\nIntroduction to SQL — Udemy"
  },
  {
    "objectID": "projects/resume.html#contact",
    "href": "projects/resume.html#contact",
    "title": "Resume",
    "section": "",
    "text": "📧 Email: example.email@domain.com\n🔗 GitHub: random-user\n🌐 Website: random-user.github.io"
  },
  {
    "objectID": "projects/project2.html",
    "href": "projects/project2.html",
    "title": "Project 2: Linear Regression Modeling",
    "section": "",
    "text": "Overview\nIn this project, I built and evaluated a Linear Regression model using Python and scikit-learn.\n\n\nSkills Demonstrated\n\nPredictive Modeling\nModel Evaluation\nData Visualization\n\n\n\nKey Code Example\n\n\nImport Libraries\nimport numpy as np import pandas as pd import matplotlib.pyplot as plt from sklearn.linear_model import LinearRegression\n\n\nCreate sample data\nnp.random.seed(0) X = 2 * np.random.rand(100, 1) y = 4 + 3 * X + np.random.randn(100, 1)\n\n\nTrain model\nmodel = LinearRegression() model.fit(X, y)\n\n\nPredict values\ny_pred = model.predict(X)\n\n\nModel Coefficients\ncoef = model.coef_[0][0] intercept = model.intercept_[0] print(“Coefficient:”, coef) print(“Intercept:”, intercept)\n\n\nPlot data and regression line\nplt.scatter(X, y, color=“blue”, label=“Data Points”) plt.plot(X, y_pred, color=“red”, linewidth=2, label=“Regression Line”) plt.title(“Linear Regression Fit”) plt.xlabel(“X”) plt.ylabel(“y”) plt.legend() plt.grid(True) plt.show()"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "🚀 My Featured Projects\n\n\n\n\n\n\n📊 Data Analysis with Pandas\n\n\nSkills: Data Cleaning, Manipulation, EDA Tools: Python, Pandas\n\n\nThis project focuses on using Pandas to clean, manipulate, and analyze large datasets.\n\nView Project ➔\n\n\n\n\n\n\n📈 Linear Regression Modeling\n\n\nSkills: Predictive Modeling, Evaluation Tools: Python, scikit-learn\n\n\nThis project builds a linear regression model to predict outcomes and evaluate model performance.\n\nView Project ➔\n\n\n\n\n\n\n🌐 Web Scraping and Visualization\n\n\nSkills: Web Scraping, Data Visualization Tools: Python, BeautifulSoup, Plotly\n\n\nThis project involves scraping data from the web and creating visualizations using Plotly.\n\nView Project ➔"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Conor-English.github.io",
    "section": "",
    "text": "Welcome\nWelcome to my portfolio website!\nExplore my projects, experiences, and work below.\nUse the navigation bar to move around."
  },
  {
    "objectID": "projects/project1.html",
    "href": "projects/project1.html",
    "title": "Project 1: Data Analysis with Pandas",
    "section": "",
    "text": "In this project, I analyzed real-world datasets using Python and Pandas to extract meaningful insights."
  },
  {
    "objectID": "projects/project1.html#visualization-example",
    "href": "projects/project1.html#visualization-example",
    "title": "Project 1: Data Analysis with Pandas",
    "section": "📊 Visualization Example",
    "text": "📊 Visualization Example\n\n\nShow the code\n# Create a simple line plot\nplt.plot(df[\"A\"], df[\"B\"], marker=\"o\")\nplt.title(\"Sample Line Plot of A vs B\")\nplt.xlabel(\"A values\")\nplt.ylabel(\"B values\")\nplt.grid(True)\nplt.show()"
  },
  {
    "objectID": "projects/project3.html",
    "href": "projects/project3.html",
    "title": "Project 3: Web Scraping and Visualization",
    "section": "",
    "text": "Overview\nIn this project, I scraped data from the web using BeautifulSoup, processed it with Pandas, and created interactive visualizations with Plotly.\n\n\nSkills Demonstrated\n\nWeb Scraping\nData Cleaning\nInteractive Visualization\n\n\n\nKey Code Example\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\n# Simulated web scraping\nhtml_content = \"\"\"\n&lt;table&gt;\n&lt;tr&gt;&lt;th&gt;Country&lt;/th&gt;&lt;th&gt;Population&lt;/th&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;USA&lt;/td&gt;&lt;td&gt;331 million&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Canada&lt;/td&gt;&lt;td&gt;38 million&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Mexico&lt;/td&gt;&lt;td&gt;128 million&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;\n\"\"\"\n\n# Parse the HTML\nsoup = BeautifulSoup(html_content, \"html.parser\")\nrows = soup.find_all(\"tr\")\n\n# Extract data\ndata = []\nfor row in rows[1:]:  # Skip header\n    cols = row.find_all(\"td\")\n    country = cols[0].text\n    population = cols[1].text\n    data.append({\"Country\": country, \"Population\": population})\n\n# Create DataFrame\ndf = pd.DataFrame(data)\ndf\n\n\n\n\n\n\n\n\nCountry\nPopulation\n\n\n\n\n0\nUSA\n331 million\n\n\n1\nCanada\n38 million\n\n\n2\nMexico\n128 million\n\n\n\n\n\n\n\n\n\n🌍 Visualization Example\n\nimport plotly.express as px\n\n# Simple bar plot\nfig = px.bar(df, x=\"Country\", y=\"Population\", title=\"Population by Country\")\nfig.show()"
  }
]